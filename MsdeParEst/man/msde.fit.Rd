% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/msde.fit.R
\name{msde.fit}
\alias{msde.fit}
\title{Estimation Of The Random Effects In Mixed Stochastic Differential Equations}
\usage{
msde.fit(times, X, model = c("OU", "CIR"), drift.random, drift.fixed = NULL,
  estim.drift.fix = 0, diffusion.random = 0, diffusion.fixed = NULL,
  estim.diffusion.fix = 0, mixture = 0, nb.mixt = 1,
  drift.fixed.mixed = 0, Niter = 10, discrete = 1)
}
\arguments{
\item{times}{vector of observation times}

\item{X}{matrix of the M trajectories (each row is a trajectory with as much columns as observations)}

\item{model}{name of the SDE: 'OU' (Ornstein-Uhlenbeck) or 'CIR' (Cox-Ingersoll-Ross)}

\item{drift.random}{random effects in the drift: 1 if one additive random effect, 2 if one multiplicative random effect or c(1,2) if 2 random effects}

\item{drift.fixed}{default NULL, fixed effect in the drift: value of the fixed effect when there is only one random effect and it is not estimated, NULL otherwise}

\item{estim.drift.fix}{default 0, 1 if the fixed effect in the drift is estimated, 0 if the fixed effect in the drift is known}

\item{diffusion.random}{default 0, 1 if one random effect in the diffusion, 0 if there is no random effect in the diffusion}

\item{diffusion.fixed}{default NULL, fixed effect in the diffusion: value of the fixed effect when there is no random effect in the diffusion and it is not estimated, NULL otherwise}

\item{estim.diffusion.fix}{default 0, 1 if the fixed effect in the diffusion is estimated, 0 otherwise}

\item{mixture}{1 if the random effects in the drift follow a mixture distribution, 0 otherwise. Default to 0.}

\item{nb.mixt}{default 1, number of mixture components for the distribution of the random effects in the drift}

\item{drift.fixed.mixed}{default 1, 1 if the value of the fixed effect in the drift is different from one mixture component to
another, 0 otherwise.}

\item{Niter}{default 10, number of iterations for the EM algorithm if mixture = 1}

\item{discrete}{default 1, 1 for discrete observations, 0 otherwise. If discrete = 0, and diffusion.random = 0, the exact likelihood associated with continuous observations is 
discretized. If discrete = 1, the likelihood of the Euler scheme of the mixed SDE is computed.}
}
\value{
\item{index}{is the vector of subscript in \eqn{1,...,M} where the estimation of \eqn{phi} has been done,  most of the time \eqn{index= 1:M}}
\item{estimphi}{matrix of estimators of \eqn{\phi=\alpha, or \beta, or (\alpha,\beta)} from the efficient statitics (see \code{\link{UVS}}), matrix of two lines if drift.random =c(1,2), numerical type otherwise}
\item{estimpsi2}{matrix of estimators of \eqn{\psi^2=\sigma^2} from the efficient statistics (see \code{\link{UVS}}), matrix of one line}
\item{gridf}{grid of values for the plots of the random effects distribution in the drift, matrix form}
\item{gridg}{grid of values for the plots of the random effects distribution in the diffusion, matrix form}
\item{estimf}{estimator of the density of \eqn{\phi} from a kernel estimator from package: stats, function: density. Matrix form: one line if one random effect or square matrix otherwise}
\item{estimg}{estimator of the density of \eqn{\psi^2}. Matrix form: one line if one random effect or square matrix otherwise}
\item{mu}{estimator of the mean of the random effects normal density}
\item{omega}{estimator of the standard deviation of the random effects normal density}
\item{a}{estimated value of the shape of the Gamma distribution}
\item{lambda}{estimated value of the scale of the Gamma distribution}
\item{sigma2}{value of the diffusion coefficient if it is fixed}
\item{bic}{BIC criterium}
\item{aic}{AIC criterium}
\item{model}{initial choice}
\item{drift.random}{initial choice}
\item{diffusion.random}{initial choice}
\item{drift.fixed}{initial choice}
\item{estim.drift.fixed}{initial choice}
\item{estim.diffusion.fixed}{initial choice}
\item{discrete}{initial choice}
\item{times}{initial choice}
\item{X}{initial choice}

For the 'paramMLmixture' method:
\item{mu}{estimated value of the mean at each iteration of the algorithm. Niter x N x 2 array. }
\item{omega}{estimated value of the standard deviation at each iteration of the algorithm. Niter x N x 2 array.}
\item{mixt.prop}{estimated value of the mixture proportions at each iteration of the algorithm. Niter x N matrix.}
\item{probindi}{posterior component probabilites. M x N matrix.}
}
\description{
Parametric estimation of the joint density of the random effects \eqn{(\alpha_j, \beta_j, \sigma_j)} in the mixed SDE

 \eqn{dX_j(t)= (\alpha_j- \beta_j X_j(t))dt + \sigma_j a(X_j(t)) dW_j(t)}.
}
\details{
Estimation of the random effects density from M independent trajectories of the SDE (the Brownian motions \eqn{W_j} are independent), with linear drift. 
The drift includes no, one or two random effects: 

if drift.random = 0: \eqn{\alpha_j \equiv \alpha} and \eqn{\beta_j \equiv \beta} are fixed

if drift.random = 1: \eqn{\beta_j \equiv \beta} is fixed and \eqn{\alpha_j} is random

if drift.random = 2: \eqn{\alpha_j \equiv \alpha} is fixed and \eqn{\beta_j} is random  

if drift.random = c(1,2): \eqn{\alpha_j} and \eqn{\beta_j} are random

The diffusion includes either a fixed effect or a random effect:

if diffusion.random = 0: \eqn{\sigma_j \equiv \sigma} is fixed

if diffusion.random = 1: \eqn{\sigma_j} is random

If there is no random effect in the diffusion (diffusion.random = 0), the drift random effect follow Gaussian distributions: 
\eqn{\alpha_j,\beta_j \sim N(\mu,\Omega)}.
If there is one random effect (\eqn{\sigma_j}) in the diffusion (diffusion.random = 1), \eqn{\sigma_j \sim Gamma(a,\lambda)}, and 
\eqn{\alpha_j,\beta_j|\sigma_j \sim N(\mu,\sigma_j^2 \Omega)}.

Two diffusions are implemented: 

the Ornstein-Uhlenbeck model (OU) \eqn{a(X_j(t))=1}

the Cox-Ingersoll-Ross model (CIR) \eqn{a(X_j(t))=\sqrt{X_j(t)}}

 Validation method:
 For a number of trajectory numj (fixed by the user or randomly chosen) this function simulates 
 Mrep =100 (by default) new trajectories with the value of the estimated random effect. 
 Then it plots on the left graph the Mrep new trajectories 
 \eqn{(Xnumj^{k}(t1), ... Xnumj^{k}(tN)), k= 1, ... Mrep} with in red the true trajectory 
 \eqn{(Xnumj(t1), ... Xnumj(tN))}. The right graph is a qq-plot of the quantiles of samples 
 \eqn{(Xnumj^{1}(ti), ... Xnumj^{Mrep}(ti))}
 for each time \eqn{ti} compared with the uniform quantiles. The outputs of the function  
 are: a matrix \code{Xnew} dimension Mrepx N+1, vector of quantiles \code{quantiles} length 
 N and the number of the trajectory for the plot \code{numj} 

 Prediction method: (A COMPLETER)
}
\examples{

\dontrun{
# Example 1: one random effect in the drift and one random effect in the diffusion coefficient.

# -- Simulation
M <- 100
Tmax <- 5
N <- 5000
model <- "OU"
drift.random <- 2
diffusion.random <- 1
drift.fixed <- 0
drift.param <- c(0.5,0.5)
diffusion.param <- c(8,1/2)

sim1 <- msde.sim(M = M, T = Tmax, N = N, model = model, drift.random = drift.random, 
diffusion.random = diffusion.random, drift.fixed = drift.fixed, 
mixture = 0, drift.param = drift.param, diffusion.param = diffusion.param)
                 
# -- Estimation

# -----Fixed effect in the drift estimated
res1 <- msde.fit(times = sim1$times, X = sim1$X, model = "OU", drift.random = 2, 
                 diffusion.random = 1, estim.drift.fix = 1, mixture = 0)
summary(res1)
print(res1)
#pred1 <- pred(res1, invariant = 0, level = 0.05, newwindow = FALSE, plot.pred = TRUE)
valid(res1)
plot(res1)

# ----- Fixed effect in the drift known and not estimated
res1bis <- msde.fit(times = sim1$times, X = sim1$X, model = "OU", drift.random = 2, 
                    diffusion.random = 1, drift.fixed=0, mixture = 0)
summary(res1bis)

# Example 2: one random effect in the drift and one fixed effect in the diffusion coefficient

# -- Simulation
M <- 100
Tmax <- 5
N <- 5000
model <- "OU"
diffusion.random <- 0
diffusion.param <- 0.5
drift.random <- 2
drift.fixed <- 10
drift.param <- c(1,sqrt(0.4/4))

sim2 <- msde.sim(M = M, T = Tmax, N = N, model = model, drift.random = drift.random,
diffusion.random = diffusion.random, drift.fixed = drift.fixed,
mixture=0, drift.param = drift.param,
diffusion.param = diffusion.param)

# -- Estimation
res2 <- msde.fit(times = sim2$times, X = sim2$X, model = "OU", drift.random = 2, 
                 diffusion.random = 0, estim.drift.fix = 1, mixture = 0)

summary(res2)
plot(res2)

# Example 3: two random effects in the drift and one random effect in the diffusion coefficient

# -- Simulation
M <- 100
Tmax <- 5
N <- 5000
model <- "OU"
drift.random <- c(1,2)
diffusion.random <- 1
density.phi <- 'normalnormal'
drift.param <- c(1,0.5,0.5,0.5)
diffusion.param <- c(8,1/2)

sim3 <- msde.sim(M = M, T = Tmax, N = N, model = model, drift.random = drift.random,
diffusion.random = diffusion.random, mixture = 0,
drift.param = drift.param, diffusion.param = diffusion.param)

# -- Estimation

res3 <- msde.fit(times = sim3$times, X = sim3$X, model = "OU", drift.random = c(1,2), 
                 diffusion.random = 1, mixture = 0)
summary(res3)
plot(res3)

# Example 4: fixed effects in the drift and one random effect in the diffusion coefficient

# -- Simulation
M <- 100
Tmax <- 5
N <- 5000
model <- "OU"
drift.random <- 0
diffusion.random <- 1
drift.fixed <- c(0,1)
diffusion.param <- c(5,3)

sim4 <- msde.sim(M = M, T = Tmax, N = N, model = model, drift.random = drift.random,
diffusion.random = diffusion.random, drift.fixed = drift.fixed,
diffusion.param = diffusion.param)

# -- Estimation
res4 <- msde.fit(times = sim4$times, X = sim4$X, model = "OU", drift.random = 0, 
                 diffusion.random = 1, mixture = 0, estim.drift.fix = 0, 
                 drift.fixed = c(0,0), discrete = 1)

summary(res4)

# Example 5: one fixed effect and one mixture random effect in the drift, and one fixed effect in 
# the diffusion coefficient

# -- Simulation
M <- 100
Tmax <- 5
N <- 5000
diffusion.random <- 0
diffusion.param <- 0.1
model <- "OU"
drift.random <- 1
drift.fixed <- 1
nb.mixt <- 2
mixt.prop <- c(0.5,0.5)
param.ea1 <- c(0.5, 0.25, 1.8, 0.25)
param.ea2 <- c(1, 0.25, 1, 0.25) 
drift.param <- param.ea1

sim5 <- msde.sim(M = M, T = Tmax, N = N, model = model, drift.random = drift.random,
                 diffusion.random = diffusion.random, drift.fixed = drift.fixed,
                 mixture=1, drift.param = drift.param,
                 diffusion.param = diffusion.param, nb.mixt = nb.mixt, mixt.prop = mixt.prop)

# -- Estimation
res5 <- msde.fit(times = sim5$times, X = sim5$X, model = "OU", drift.random = 1, 
                 estim.drift.fix = 1, diffusion.random = 0, estim.diffusion.fix = 1, 
                 mixture = 1, nb.mixt=2, Niter = 25)

summary(res5)
print(res5)
plot(res5)
  }

}
\references{
See  
Maximum Likelihood Estimation for Stochastic Differential Equations with Random Effects, Delattre, M., Genon-Catalot, V. and Samson, A. \emph{Scandinavian Journal of Statistics 40(2) 2012} \bold{322-343} 

Estimation of population parameters in stochastic differential equations with random effects in the diffusion coefficient, Delattre, M., Genon-Catalot, V. and Samson, A. \emph{ESAIM:PS 19 2015} \bold{671-688}

Mixtures of stochastic differential equations with random effects: application to data clustering, Delattre, M., Genon-Catalot, V. and Samson, A. \emph{Journal of Statistical Planning and Inference 173 2016} \bold{109-124} 

Parametric inference for discrete observations of diffusion processes with mixed effects, Delattre, M., Genon-Catalot, V. and Laredo, C. \emph{hal-01332630 2016}

Estimation of the joint distribution of random effects for a discretely observed diffusion with random effects, Delattre, M., Genon-Catalot, V. and Laredo, C. \emph{hal-01446063 2017}
}
\keyword{estimation}
